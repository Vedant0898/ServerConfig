
name: Add_CI_Files

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      python:
        type: boolean
        description: Include Python checks 
      golang:
        type: boolean
        description: Include Golang checks 
      node:
        type: boolean
        description: Include Node checks 
      ts:
        type: boolean
        description: Include Typescript checks 
      flutter:
        type: boolean
        description: Include Flutter checks 
      dart:
        type: boolean
        description: Include Dart checks 
      
      # set default to true
      docker:
        type: boolean
        description: Include Docker checks
        default: true
      shell:
        type: boolean
        description: Include Shell script checks 
        default: true
    
      


jobs:
  
  AddCIFiles:
    runs-on: ubuntu-latest
    steps:
      # Set up data in json format
      - name: Set data
        uses: schdck/create-env-json@v2
        id: create-env
        with:
          file-name: 'data.json'
          repo: ${{ github.event.repository.name }}
          python: ${{ github.event.inputs.python }}
          golang: ${{ github.event.inputs.golang }}
          node: ${{ github.event.inputs.node }}
          ts: ${{ github.event.inputs.ts }}
          flutter: ${{ github.event.inputs.flutter }}
          dart: ${{ github.event.inputs.dart }}
          docker: ${{ github.event.inputs.docker }}
          shell: ${{ github.event.inputs.shell }}

      # Call Deploybot endpoint
      - name: cURL Request
        run: |  
          curl --location --request POST 'https://listen.devclub.in/github/ci' \
          --header 'Content-Type: application/json' \
          --data-binary '@data.json'
        
      # TO-DO
      # update deploybot endpoint
      # add verification token in request headers